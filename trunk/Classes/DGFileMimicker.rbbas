#tag ClassProtected Class DGFileMimicker	#tag Method, Flags = &h0		Sub mimicAndReplaceFile(target As FolderItem, source As Folderitem)		  //This method REPLACES the target with the new mimicked file.		  mimicFile(target, target, source)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub mimicFile(target As FolderItem, outputFile As FolderItem, source As FolderItem)		  #pragma DisableBackgroundTasks		  '##ADD PROGRESS MONITOR		  //This tags the target item with the encrypted data.		  //We accomplish this by reading in all the data and streaming it out to a new file and then adding the encrypted data.		  Dim tempItem As Folderitem = TemporaryFolder.Child("tempTaggedBitClampFile.cdx")		  Dim inStream, outStream As BinaryStream		  		  //Check that the target is not a folder.		  If target.Directory Then		    Me.errMsg = "The target was a folder or directory, please choose a file."		    Return		  End If		  		  inStream = target.OpenAsBinaryFile		  outStream = tempItem.CreateBinaryFile("")		  		  //Error check		  If inStream = NIL OR outStream = NIL Then		    Me.errMsg = "An error occured. Please report #DGFTtf20."		    Return		  End If		  		  //Loop through the target and write it all to the outStream		  While Not inStream.EOF		    outStream.Write(inStream.Read(256000))		    App.YieldToNextThread		  Wend		  outStream.Close		  //Do the same for the encrypted data.		  inStream = source.OpenAsBinaryFile		  		  //Error Check		  If inStream = NIL Then		    Me.errMsg = "An error occured. Please report #DGFTtf20."		    Return		  End If		  		  Dim Block as New MemoryBlock(256000)		  outStream = tempItem.OpenAsBinaryFile(True)		  outStream.Position = outStream.Length		  		  While NOT inStream.EOF		    Block = inStream.Read(256000)		    outStream.Write(Block)'inStream.Read(256000))		    App.YieldToNextThread		  Wend		  		  //Replace the target with the new tagged file		  tempItem.MoveFileTo(outputFile)		  outputFile.Name = target.Name 'makes sure the outputed mimicked file has the same name as the original.		End Sub	#tag EndMethod	#tag Property, Flags = &h0		errMsg As String	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="errMsg"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass