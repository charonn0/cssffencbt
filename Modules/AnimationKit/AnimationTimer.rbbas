#tag ClassProtected Class AnimationTimerInherits Timer	#tag Event		Sub Action()		  dim i as integer		  dim d as double		  dim start,finish,change,delta as AnimationRect		  dim task as animationtask		  		  // do the animation		  for i = 0 to ubound(animationcore.tasks)		    task = animationcore.tasks(i)		    if task.frame = 0 then		      task.starttime = microseconds		      task.startrect = task.getcurrentrect		    end		    task.frame = task.frame + 1		    		    start = task.startrect		    delta = task.delta		    		    // new code		    change.top = AnimationEasing.GetEaseValue(task.easingmethod,task.runtime,start.top,delta.top,task.duration * 1000000)		    change.left = AnimationEasing.GetEaseValue(task.easingmethod,task.runtime,start.left,delta.left,task.duration * 1000000)		    change.width = AnimationEasing.GetEaseValue(task.easingmethod,task.runtime,start.width,delta.width,task.duration * 1000000)		    change.height = AnimationEasing.GetEaseValue(task.easingmethod,task.runtime,start.height,delta.height,task.duration * 1000000)		    		    // old code		    'finish = task.newrect		    'd = (task.frame / task.frames)		    'change.top = start.top + ((finish.top - start.top) * d)		    'change.left = start.left + ((finish.left - start.left) * d)		    'change.width = start.width + ((finish.width - start.width) * d)		    'change.height = start.height + ((finish.height - start.height) * d)		    		    task.setrectnow change		  next		  		  // cleanup		  for i = ubound(animationcore.tasks) downto 0		    task = animationcore.tasks(i)		    if task.frame = task.frames then		      // animation is completed, make sure it's final position is set		      task.setrectnow task.newrect		      animationcore.tasks.remove i		      		      if task.nexttask <> nil then		        if task.nexttask.run then		        end		      end		    end		  next		End Sub	#tag EndEvent	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Timer"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InheritedFrom="Timer"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Timer"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InheritedFrom="Timer"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InheritedFrom="Timer"		#tag EndViewProperty		#tag ViewProperty			Name="Mode"			Visible=true			Group="Behavior"			InitialValue="2"			Type="Integer"			EditorType="Enum"			InheritedFrom="Timer"			#tag EnumValues				"0 - Off"				"1 - Single"				"2 - Multiple"			#tag EndEnumValues		#tag EndViewProperty		#tag ViewProperty			Name="Period"			Visible=true			Group="Behavior"			InitialValue="1000"			Type="Integer"			InheritedFrom="Timer"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass