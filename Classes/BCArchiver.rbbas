#tag ClassProtected Class BCArchiver	#tag Method, Flags = &h0		Function Archive(Source() as folderItem) As Boolean		  Dim zar as new ZipArchive		  Dim f as folderitem		  		  f = TemporaryFolder.Child("BitClamp.zip")		  f.Delete		  If Not zar.Open(f, True) then		    Return False		  End If		  UsePlugin = Preferences.Compress		  		  arch = NEW ZipThread		  arch.Compress(Zar,Source(),False,Zar.MacBinarySmart)		  		  Return True		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function UnArchive(Target as FolderItem) As Boolean		  '===================		  Dim zarc as New ZipArchive		  Dim UnArch as New ZipThread		  Dim source as FolderItem		  '===================		  		  source = TemporaryFolder.Child("BitClamp.zip") 'Sets the source as the temporary zip file.		  		  If Not Zarc.Open(Source, False) then 'Opens the zip as read only, sends the error message if we have a problem.		    break //debug		    return false		  End If		  		  UnArch.Decompress(Zarc,Target,True)		  		  Return True		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Cancel()		  Globals.arch.Kill		End Sub	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass